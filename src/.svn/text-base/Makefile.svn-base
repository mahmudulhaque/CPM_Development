#
# OMNeT++/OMNEST Makefile for cpm
#
# This file was generated with the command:
#  opp_makemake -f --deep -I/usr/include/libxml2 -lxml2
#

# Name of target to be created (-o option)
TARGET = cpm$(EXE_SUFFIX)

# User interface (uncomment one) (-u option)
USERIF_LIBS = $(ALL_ENV_LIBS) # that is, $(TKENV_LIBS) $(CMDENV_LIBS)
#USERIF_LIBS = $(CMDENV_LIBS)
#USERIF_LIBS = $(TKENV_LIBS)

# C++ include paths (with -I)
INCLUDE_PATH = -I/usr/include/libxml2 -I.

# Additional object and library files to link with
EXTRA_OBJS =

# Additional libraries (-L, -l options)
LIBS =  -lxml2

# Output directory
PROJECT_OUTPUT_DIR = ../out
PROJECTRELATIVE_PATH = src
O = $(PROJECT_OUTPUT_DIR)/$(CONFIGNAME)/$(PROJECTRELATIVE_PATH)

# Object files for local .cc and .msg files
OBJS = \
    $O/agent.o \
    $O/cont.o \
    $O/cpm.o \
    $O/cpmcommon.o \
    $O/CPmessageHandler.o \
    $O/cpmsite.o \
    $O/environ.o \
    $O/feeder.o \
    $O/scpact.o \
    $O/SCPmessageHandler.o \
    $O/sink.o \
    $O/CPmessage_m.o \
    $O/SCPmessage_m.o

# Message files
MSGFILES = \
    CPmessage.msg \
    SCPmessage.msg

#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc or configuser.vc)

ifneq ("$(OMNETPP_CONFIGFILE)","")
CONFIGFILE = $(OMNETPP_CONFIGFILE)
else
ifneq ("$(OMNETPP_ROOT)","")
CONFIGFILE = $(OMNETPP_ROOT)/Makefile.inc
else
CONFIGFILE = $(shell opp_configfilepath)
endif
endif

ifeq ("$(wildcard $(CONFIGFILE))","")
$(error Config file '$(CONFIGFILE)' does not exist -- add the OMNeT++ bin directory to the path so that opp_configfilepath can be found, or set the OMNETPP_CONFIGFILE variable to point to Makefile.inc)
endif

include $(CONFIGFILE)

# Simulation kernel and user interface libraries
OMNETPP_LIB_SUBDIR = $(OMNETPP_LIB_DIR)/$(TOOLCHAIN_NAME)
OMNETPP_LIBS = -L"$(OMNETPP_LIB_SUBDIR)" -L"$(OMNETPP_LIB_DIR)" $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS = $(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# <<<
#------------------------------------------------------------------------------

# Main target
all: $(TARGET)

$(TARGET) : $O/$(TARGET)
	ln -s -f $O/$(TARGET) .

$O/$(TARGET): $(OBJS)  $(wildcard $(EXTRA_OBJS)) Makefile
	@mkdir -p $O
	$(CXX) $(LDFLAGS) -o $O/$(TARGET)  $(OBJS) $(EXTRA_OBJS) $(WHOLE_ARCHIVE_ON) $(LIBS) $(WHOLE_ARCHIVE_OFF) $(OMNETPP_LIBS)

.PHONY:

.SUFFIXES: .cc

$O/%.o: %.cc
	@mkdir -p $(dir $@)
	$(CXX) -c $(COPTS) -o $@ $<

%_m.cc %_m.h: %.msg
	$(MSGC) -s _m.cc $(MSGCOPTS) $?

msgheaders: $(MSGFILES:.msg=_m.h)

clean:
	-rm -rf $O
	-rm -f cpm cpm.exe libcpm.so libcpm.a libcpm.dll libcpm.dylib
	-rm -f ./*_m.cc ./*_m.h

cleanall: clean
	-rm -rf $(PROJECT_OUTPUT_DIR)

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile -P\$$O/ -- $(MSG_CC_FILES)  ./*.cc

# DO NOT DELETE THIS LINE -- make depend depends on it.
$O/cpmsite.o: cpmsite.cc \
	SCPmessage_m.h \
	agent.h \
	CPmessage_m.h \
	cpmcommon.h \
	CPmessageHandler.h \
	cpmsite.h \
	environ.h \
	scpact.h \
	cont.h \
	cpm.h
$O/feeder.o: feeder.cc \
	SCPmessage_m.h \
	agent.h \
	CPmessageHandler.h \
	CPmessage_m.h \
	cpmcommon.h \
	cpmsite.h \
	environ.h \
	feeder.h \
	cpm.h \
	cont.h
$O/sink.o: sink.cc \
	SCPmessage_m.h \
	cpmcommon.h \
	CPmessage_m.h \
	sink.h
$O/SCPmessageHandler.o: SCPmessageHandler.cc \
	SCPmessage_m.h \
	agent.h \
	CPmessage_m.h \
	cpmcommon.h \
	CPmessageHandler.h \
	cpmsite.h \
	environ.h \
	cont.h \
	cpm.h \
	SCPmessageHandler.h
$O/cpmcommon.o: cpmcommon.cc \
	SCPmessage_m.h \
	CPmessage_m.h \
	cpmcommon.h
$O/agent.o: agent.cc \
	SCPmessage_m.h \
	agent.h \
	CPmessage_m.h \
	cpmcommon.h \
	CPmessageHandler.h \
	cpmsite.h \
	environ.h \
	cont.h \
	cpm.h
$O/CPmessageHandler.o: CPmessageHandler.cc \
	SCPmessage_m.h \
	agent.h \
	CPmessage_m.h \
	cpmcommon.h \
	CPmessageHandler.h \
	cpmsite.h \
	environ.h \
	cont.h \
	cpm.h
$O/environ.o: environ.cc \
	SCPmessage_m.h \
	cpmcommon.h \
	CPmessage_m.h \
	cpmsite.h \
	environ.h \
	cont.h \
	cpm.h
$O/cpm.o: cpm.cc \
	SCPmessage_m.h \
	agent.h \
	CPmessage_m.h \
	cpmcommon.h \
	CPmessageHandler.h \
	cpmsite.h \
	environ.h \
	scpact.h \
	cont.h \
	cpm.h
$O/scpact.o: scpact.cc \
	SCPmessage_m.h \
	agent.h \
	cpmcommon.h \
	CPmessageHandler.h \
	CPmessage_m.h \
	cpmsite.h \
	environ.h \
	scpact.h \
	cpm.h \
	cont.h
$O/CPmessage_m.o: CPmessage_m.cc \
	CPmessage_m.h
$O/SCPmessage_m.o: SCPmessage_m.cc \
	SCPmessage_m.h
$O/cont.o: cont.cc \
	SCPmessage_m.h \
	cpmcommon.h \
	CPmessage_m.h \
	cont.h

