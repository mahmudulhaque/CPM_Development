//
// Generated file, do not edit! Created by opp_msgc 4.1 from SCPmessage.msg.
//

#ifndef _SCPMESSAGE_M_H_
#define _SCPMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>SCPmessage.msg</tt> by opp_msgc.
 * <pre>
 * packet SCPmessage
 * {
 *     int src;
 *     int dest;
 * 
 *     string cmd;
 *     bool processed = false;
 * }
 * </pre>
 */
class SCPmessage : public ::cPacket
{
  protected:
    int src_var;
    int dest_var;
    opp_string cmd_var;
    bool processed_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SCPmessage&);

  public:
    SCPmessage(const char *name=NULL, int kind=0);
    SCPmessage(const SCPmessage& other);
    virtual ~SCPmessage();
    SCPmessage& operator=(const SCPmessage& other);
    virtual SCPmessage *dup() const {return new SCPmessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getSrc() const;
    virtual void setSrc(int src_var);
    virtual int getDest() const;
    virtual void setDest(int dest_var);
    virtual const char * getCmd() const;
    virtual void setCmd(const char * cmd_var);
    virtual bool getProcessed() const;
    virtual void setProcessed(bool processed_var);
};

inline void doPacking(cCommBuffer *b, SCPmessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SCPmessage& obj) {obj.parsimUnpack(b);}


#endif // _SCPMESSAGE_M_H_
